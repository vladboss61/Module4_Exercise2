// host.docker.internal -  use to cumminicate inside container in one network or the container_name using docker compose.


docker build -t your_tag_alias_for_image .
docker run -it app-2 /bin/sh // start image and i

docker run -d -p 5000:80 --name `name_of_container` `name_of_image_to_run` // start name_of_image_to_run image `-d` - in background and terminal will not be blocked.
docker run -d -p 5000:80 --name `name_of_container` --rm -d `name_of_image_to_run` 
// --rm - automatically remove container when he is stopped or ended task.
// start name_of_image_to_run image `-d` - in background and terminal will not be blocked.

docker run -d -p 55000:80 --name run-site-t-2 site-t - example

docker exec -it `id_of_runned_container` /bin/bash // run console inside docker image 
docker exec -it `id_of_runned_container` /bin/sh // run console inside docker image 

docker container list // list of ran  containers 
docker container run -p 81:80 --detach -dit app-2

-dit - wait container and not stop even if ended program.
docker ps -a // list of containers
docker ps -a -q // list of only ids of containers
docker rm $(docker ps -qa) //== docker rm $(docker ps -a -q)  // removes all contailers by ids

docker-compose build --no-cache ( собирает все при этом не использует закешированые образы )
docker-compose up   // ( запускает )
docker-compose up -d // detached mode
docker-compose down //( отключает )


!! КОНТЕЙНЕР РАБОТАЕТ ДО ТЕХ ПОР ПОКА РАБОТАЕТ ПРИЛОЖЕНИЕ. КОГДА ПРИЛОЖЕНИЕ ЗАВЕРШИЛОСЬ ТО КОНТРЕЙНЕР СТОПАЕТСЯ
СЕРВЕР РАБОТАЕТ ВСЕГДА ПОЭТОМУ ДОКЕР НЕ ВЫКЛЮЧАЕТСЯ

